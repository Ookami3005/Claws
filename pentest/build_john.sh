#!/usr/bin/bash

# Función auxiliar que compila los scripts extra de John desde el repositorio oficial
build_john () {

    # Pedimos un argumento
    if [[ $# -ne 1 ]] ; then
        exit 1
    fi

    pac_man=""
    command -v nala > /dev/null && pac_man=nala || pac_man=apt

    echo -e "\nInstalando dependencias de John...\n"

    # Dependencias de John The Reaper
    john_deps=(git build-essential libssl-dev zlib1g-dev yasm pkg-config libgmp-dev libpcap-dev libbz2-dev)

    # Instalar las dependencias
    sudo $pac_man install -y "${john_deps[@]}"

    # Si tienes una GPU AMD, te recomiendo descomentar la siguiente línea:
    sudo $pac_man install -y ocl-icd-opencl-dev opencl-headers fglrx-dev

    # Lo mismo va para usuarios de NVIDIA:
    # sudo $pac_man install -y nvidia-opencl-dev

    clear

    # Clonado del repo oficial
    cd "$1" || exit 1
    echo -e "Clonando John del repositorio oficial...\n"
    git clone https://github.com/openwall/john -b bleeding-jumbo "$1/john" || exit 1
    clear

    # Iniciando la compilación
    echo -e "Compilando John...\n"
    cd "$1/john/src" || exit 1
    ./configure && make -s clean && make -sj4
    clear

    # Configuración de los ejecutables
    echo -e "Extrayendo scripts...\n"

    # Generamos un enlace simbólico por temas de compatibilidad con los scripts
    command -v python > /dev/null || sudo ln -sv /usr/bin/python3 /sbin/python > /dev/null

    # Definimos la carpeta donde almacenaremos los ejecutables
    mkdir -p "$HOME/.local"
    mkdir -p "$HOME/.local/bin"
    mkdir -p "$HOME/.local/bin/2john"

    # Transferir los ejecutables
    cd "$1/john/run" || exit 1
    for item in *{2,to}john* ; do
        dest=$(cut -d "." -f 1 <<< "$item")
        cp "$item" "${HOME}/.local/bin/2john/$dest"
    done

    echo -e "Por favor añada al PATH la carpeta '${HOME}/.local/bin/2john'...\n"

}
